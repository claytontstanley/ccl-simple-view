Directory Structure:
.
├── README
├── actr6
│   └── devices
├── bincarbon
│   ├── CFBundle.lisp
│   ├── base-trek-tasks.lisp
│   ├── blinker.lisp
│   ├── experiment-window4.lisp
│   ├── launch-url.lisp
│   ├── menubar-hide.lisp
│   ├── misc-lib.lisp
│   ├── pict-svm.lisp
│   ├── procedure-window2.lisp
│   ├── seq-math.lisp
│   ├── snd-player.lisp
│   └── timer.lisp
├── binccl
│   ├── mcl-ccl-colors.lisp
│   └── resources.lisp
├── docs
│   ├── Getting\ Started\ with\ MCL.pdf
│   ├── InterfaceBuilderWithCCLTutorial.pdf
│   └── Macintosh\ Common\ Lisp\ Ref.pdf
├── easygui
│   └── extensions.lisp
├── scratch
│   ├── dialog-item.lisp
│   ├── ffi.lisp
│   ├── image.lisp
│   ├── it-example1.lisp
│   └── scratch.lisp
├── submodules
│   ├── actr6
│   └── ccl
└── testing
    ├── Makefile
    ├── actr6 -> ../submodules/actr6
    ├── bincarbon -> ../bincarbon
    ├── bootstrap-mcl.lisp
    ├── bootstrap.lisp
    ├── ccl -> ../submodules/ccl/dx86cl64
    ├── data
    ├── phaser -> /Volumes/RedGiant/X\ Support/X83\ Frank\ Trek\ 11/Experiment
    ├── testCCLDevice.lisp
    ├── testImages.lisp
    ├── testPhaser.lisp
    ├── testTutorials.lisp
    ├── testVotebox.lisp
    └── votebox -> /Volumes/RedGiant/Projects/ACCURATE/ACT-R\ VoteBox\ Models


actr6:		All .lisp files needed to build an ACT-R device for CCL that uses a Cocoa display. 
		-Note the share.lisp file lives here for now, which contains the MCL GUI interface for CCL

bincarbon:	All original MCL bincarbon code. Just a few files have minor tweaks to work with CCL. Timer is broken on CCL currently though.
		Other files, like CFBundle.lisp don't work at all on CCL, but aren't necessary on CCL. The main goal for this folder is to document
		all changes to bincarbon files when migrating to CCL, while maintaining backwards compatibility with MCL.

binccl:		CCL-specific utility files. Contains a CCL implementation of an interface for managing resource files (e.g., sounds, images)

docs:		Archived documentation and reference manuals found online.
		-No docs for this specific stuff yet

easygui:	Any .lisp extensions to CCL's easygui package. 
		-Contains a few bug fixes, and an extension which provides a Cocoa view that does not respond to mouse activity	

scratch:	Stray lisp code, experimental, etc.
		-None of this is loaded for any of the tests

submodules:	Source code for actr and ccl
		-actr is newest version (as of Jun 2012). All code is same except that loader files (loader.lisp) are inside each of the tutorial folders
		-ccl is newest version (as of Jun 2012). Image is modified. I added a few helper functions/packages that I like to use for a testing environment.
		 This means that you'll have to load this ccl image if you want to run the tests (for now)

testing:	Source code for testing the ccl code
		-testCCLDevice.lisp: Used to test basic functionality of building a Cocoa display by writing lisp code that meets the uwi.lisp interface spec
		-testTutorials.lisp: Runs ACT-R through all tutorials; checks that ACT-R can 'see' CCL's Cocoa device
		-testImages.lisp: Tests that the CCL resources.lisp file correctly manages images
		-testVotebox.lisp: Tests to run Votebox on CCL
		-testPhaser.lisp: Tests to run Phaser on CCL
	

Main files:	

actr6/devices/ccl/share.lisp: Implements basic MCL GUI interface in CCL. Leverages CCL's easygui package so that a Cocoa window can be used in CCL.
actr6/devices/ccl/uwi.lisp: CCL's implementation of the RPM interface. Note that this file is identical to MCL's file
actr6/devices/ccl/device.lisp: CCL's implementation of the RPM interface. Only slight changes to this file compared to MCL's file. I'm trying to keep these to a minimum.


To run the tests:
		-Mount RedGiant volume	
		-Navigate to the mcl-migration folder on RedGiant
		-launch the custom ccl image and require :cocoa
		-A Cocoa listener should pop up
		-Use the Cocoa listener to load one of the test files

		e.g.:
		CHIL-Nebula:mcl-migration claytonstanley$ cd /Volumes/RedGiant/Projects/mcl-migration/
		CHIL-Nebula:mcl-migration claytonstanley$ cd submodules/ccl
		CHIL-Nebula:ccl claytonstanley$ ./ccl -e '(require :cocoa)'
		[Load up mcl-migration/testing/testCCLDevice.lisp]
		[try loading testTutorials.lisp, etc.]
	



